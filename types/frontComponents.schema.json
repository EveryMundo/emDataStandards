{
  "id": "/frontComponent",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "frontComponent",
  "description": "frontComponent",
  "type": "object",
  "properties": {
    "showLoading": {
      "description": "Whether to show loading animation display",
      "type": "boolean",
      "example": true
    },
    "role": {
      "description": "Accessibility Attribute: Used to communicate an important and usually time-sensitive message to the user. When this role is added to an element, the browser will send out an accessible alert event to assistive technology products which can then notify the user about it. Additional options: https://www.w3.org/WAI/PF/HTML/wiki/RoleAttribute",
      "type": "string",
      "example": "Alert"
    },
    "ariaLabel": {
      "description": "Accessibility Attribute: The aria-label attribute is used to define a string that labels the current element. Used in cases where a text label is not visible on the screen.",
      "type": "string",
      "example": null
    },
    "ariaLive": {
      "description": "Accessibility Attribute: ARIA live regions provide a way to programmatically expose dynamic content changes in a way that can be announced by assistive technologies. Available Options: 1. aria-live='polite' indicates that the screen reader should wait until the user is idle before presenting updates to the user. This is the most commonly used value, as interrupting the user with 'assertive' might interrupt their flow. 2. aria-atomic is not set (false by default) so that only the added or removed users should be spoken and not the entire roster each time. 3. aria-relevant='additions removals' ensures that both users added or removed to the roster will be spoken. Reference: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions",
      "type": "string",
      "example": "Polite"
    },
    "isAriaBusy": {
      "description": "Accessibility Attribute: ARIA-busy state should be used by the content authors when a portion on a web page has auto updating content. Ref:  http://www.maxability.co.in/2014/02/aria-busy/",
      "type": "boolean",
      "example": false
    },
    "loadingLabel": {
      "description": "Loading Label to be displayed",
      "type": "string",
      "example": "Loading"
    },
    "priceSpecification": {
      "$ref": "./priceSpecification.schema.json"
      }
    },
    "showSorting": {
      "description": "Whether to show sorting option. Only available for the following modules so far: Fares List_Mosaic Grid, Fares List_Horizontal Tile, Fares Filterable List_Horizontal Tile",
      "type": "boolean",
      "example": true
    },
    "defaultImage": {
      "description": "Default Destination Image for cases where the destination location do not have an associated image. Future Implementation: The destination image will be automatically returned by the Fares Microservices when no location image is found.",
      "type": "string",
      "example": "arrivalimage.com"
    },
    "additionalCssClasses": {
      "description": "CSS Classes to be applied to the Slider",
      "type": "string",
      "example": null
    },
    "showGeneralDisclaimer": {
      "description": "Whether to show module generic disclaimer at the UI level",
      "type": "boolean",
      "example": false
    },
    "showGeneralDisclaimerOnTop": {
      "description": "Whether to show on top the module generic disclaimer at the UI level",
      "type": "boolean",
      "example": true
    },
    "showCallToAction": {
      "description": "Whether to show Book CTA at the UI level",
      "type": "boolean",
      "example": false
    },
    "showPricing": {
      "description": "Whether to show fare pricing at the UI level",
      "type": "boolean",
      "example": true
    },
    "showDiscountFare": {
      "description": "Whether to show fare promo flag at the UI levele",
      "type": "boolean",
      "example": true
    },
    "showDots": {
      "description": "Whether to show navigation dots at the UI level (Usually activated for 4 or less cards)",
      "type": "boolean",
      "example": false
    },
    "className": {
      "description": "CSS Class for the component functionality",
      "type": "string",
      "example": "ExploreSlider"
    },
    "isScrollInfinite": {
      "description": "Whether the infinite scroll behavior is to be activated",
      "type": "boolean",
      "example": false
    },
    "isLazyLoad": {
      "description": "Whether is present lazy load for performance optimization",
      "type": "boolean",
      "example": true
    },
    "slidesToShowNumber": {
      "description": "Default number of cards to show at the UI level",
      "type": "number",
      "example": 3
    },
    "slidesToScrollNumber": {
      "description": "Default number of cards when scrolling at the UI level",
      "type": "number",
      "example": 2
    },
    "responsiveDetails": {
      "description": "Array of responsive details",
      "type": "array",
      "properties": {
        "fields": {
          "description": "fields",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "breakpoint": {
                "description": "Breakpoint",
                "type": "number",
                "example": 1200
              },
              "settings": {
                "description": "Settings",
                "type": "object",
                "properties": {
                  "slidesToShow": {
                    "description": "Slides to Show",
                    "type": "number",
                    "example": 3
                  },
                  "slidesToScroll": {
                    "description": "Slides to Scroll",
                    "type": "number",
                    "example": 3
                  }
                } 
              }
            }
          }
        }
    }},
    "initialSlide": {
      "description": "Initial slide to display when querying. Defaults to 0",
      "type": "number",
      "example": 1
    },
    "showArrows": {
      "description": "Whether to show right and left navigation arrows at the UI level",
      "type": "boolean",
      "example": true
    },
    "isAutoDisplay": {
      "description": "Whether to activate autodisplay behaviour at the UI level",
      "type": "boolean",
      "example": false
    },
    "isRightToLeft": {
      "description": "Whether to activate right to left depending on the language. Defaults to false",
      "type": "boolean",
      "example": false
    },
    "isFullWidth": {
      "description": "Whether to show sorting full width at the UI level",
      "type": "boolean",
      "example": true
    },
    "showBlankOption": {
      "description": "Whether to display the default sorting option in blank at the UI level",
      "type": "boolean",
      "example": false
    },
    "typeLabelsSorting": {
      "description": "Available sorting type labels",
      "type": "object",
      "properties": {
        "mostPopular": {
          "description": "mostPopular",
          "type": "string",
          "example": "fareMostPopular"
        },
        "mostSearched": {
          "description": "mostSearched",
          "type": "string",
          "example": "fareMostPopular"
        },
        "priceLowToHigh": {
          "description": "priceLowToHigh",
          "type": "string",
          "example": "fareLowToHigh"
        },
        "priceHighToLow": {
          "description": "priceHighToLow",
          "type": "string",
          "example": "fareHighToLow"
        },
        "date": {
          "description": "date",
          "type": "string",
          "example": "fareDate"
        },
        "tripLength": {
          "description": "tripLength",
          "type": "string",
          "example": "fareTripLength"
        },
        "departureAsc": {
          "description": "departureAsc",
          "type": "string",
          "example": "fareDepartureAsc"
        },
        "flightDurationAsc": {
          "description": "flightDurationAsc",
          "type": "string",
          "example": "fareFlightDurationAsc"
        }
      }
    },
    "sortingTypes": {
      "description": "Available sorting types",
      "type": "array",
      "items": {
        "type": "string",
        "example": [
          "priceLowToHigh",
          "priceHighToLow",
          "date"
        ]
      }
    },
    "journeyType": {
      "description": "Journey type",
      "type": "string",
      "example": "OW"
    },
    "fareClass": {
      "description": "ECONOMY, BUSINESS, FIRST",
      "type": "string",
      "example": "Economy"
    },
    "totalPrice": {
      "description": "The total price for the reservation or ticket, including applicable taxes, shipping, etc.",
      "type": "number",
      "example": 312
    },
    "departureAirport": {
      "$ref": "./airport.schema.json"
    },
    "departureCity": {
      "$ref": "./city.schema.json"
    },
    "arrivalAirport": {
      "$ref": "./airport.schema.json"
    },
    "arrivalCity": {
      "$ref": "./city.schema.json"
    },
    "departureDate": {
      "description": "Expected departure date",
      "type": "string",
      "example": "2017-12-07"
    },
    "returnDate": {
      "description": "Expected return date",
      "type": "string",
      "example": "2017-12-10"
    },
    "airline": {
      "$ref": "./airline.schema.json"
    },
    "showArrivalAirportImage": {
      "description": "Whether to show the arrival airport image at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showDepartureCityName": {
      "description": "Whether to show the departure city name at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showDepartureAirportIataCode": {
      "description": "Whether to show the departure airport IATA code at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showArrivalCityName": {
      "description": "Whether to show the arrival city name at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showArrivalAirportIataCode": {
      "description": "Whether to show the arrival airport IATA code at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showRoute": {
      "description": "Whether to show the route at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showDepartureDate": {
      "description": "Whether to show the departure date at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showReturnDate": {
      "description": "Whether to show the return date at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showDateSeparator": {
      "description": "Whteher to show date separator at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showJourneyType": {
      "description": "Whether to show journey type at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showCallToActionSubtitle": {
      "description": "Whether to show CTA subtitle at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showRouteOnDepartureDate": {
      "description": "Whether to show route on departure date at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showRouteOnReturnDate": {
      "description": "Whether to show route on return date at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showFareClass": {
      "description": "Whether to show the fare class at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showTripLength": {
      "description": "Whether to show the trip length at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showAirlineLogo": {
      "description": "Whether to show the airline logo at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showAirlineName": {
      "description": "Whether to show the airline name at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showFareDisclaimer": {
      "description": "Whether to show the fare disclaimer at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showTotalPrice": {
      "description": "Whether to show the total price at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showDiscountFlag": {
      "description": "Whether to show promo flag at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showDepartureDateLabel": {
      "description": "Whether to show departure date label at the UI level",
      "type": "boolean",
      "example": ""
    },
    "showReturnDateLabel": {
      "description": "Whether to show return date label at the UI level",
      "type": "boolean",
      "example": ""
    },
    "currency": {
      "description": "The currency (in 3-letter ISO 4217 format) of the price",
      "type": "boolean",
      "example": ""
    },
    "currencySymbol": {
      "description": "Displayed currency symbol",
      "type": "string",
      "example": "$"
    },
    "formattedTotalPrice": {
      "description": "Formatted total price",
      "type": "string",
      "example": "234.00"
    },
    "showcurrency": {
      "description": "Whether to show the price currency code at the UI level",
      "type": "boolean",
      "example": true
    },
    "showcurrencySymbol": {
      "description": "Whether to show the price currency symbol at the UI level",
      "type": "boolean",
      "example": true
    },
    "templateLayout": {
      "description": "Booking layout template display at UI level",
      "type": "string",
      "example": "Extended"
    },
    "controlsTemplateLayout": {
      "description": "Template layout for controls refering to the labels and icons disposition",
      "type": "string",
      "example": null
    },
    "showTitle": {
      "description": "Whether to show the booking mask title at UI level",
      "type": "boolean",
      "example": true
    },
    "showSubtitle": {
      "description": "Whether to show the booking mask subtitle at UI level",
      "type": "boolean",
      "example": false
    },
    "isFocusOnCurrentField": {
      "description": "Whether focus should be on current field",
      "type": "boolean",
      "example": false
    },
    "showErrors": {
      "description": "Whether to show validation errors when interacting with the booking form",
      "type": "boolean",
      "example": true
    },
    "showJourneyTypes": {
      "description": "Whether to show each journey type at the UI level",
      "type": "array",
      "items": {
        "type": "boolean",
        "example": [
          false,
          true
        ]
    },
    "journeyTypes": {
      "description": "Journey types display at the UI level",
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": [
        "OW",
        "RT"
      ]
    },
    "journeyTypeControl": {
      "description": "Journey Type Control display at the UI level",
      "type": "string",
      "example": "RadioButton"
    },
    "showMultiCity": {
      "description": "Whether to show multi city at the UI level",
      "type": "boolean",
      "example": false
    },
    "multiCityUrl": {
      "description": "Journey types multi-city link to core website.",
      "type": "string",
      "example": "multicity.com"
    },
    "showAirportsList": {
      "description": "Whether to show airports list at the UI level",
      "type": "boolean",
      "example": false
    },
    "airportsListMaxNumber": {
      "description": "Maximun number of origin/destination airports to show",
      "type": "number",
      "example": 40
    },
    "isAirportsClearableButton": {
      "description": "Whether there is a button to clear airports list",
      "type": "boolean",
      "example": false
    },
    "isAirportsAutocomplete": {
      "description": "Whether there is autocompletion on airport lists",
      "type": "boolean",
      "example": true
    },
    "airportsListFormat": {
      "description": "Airports list format referrencing items visualization",
      "type": "string",
      "example": null
    },
    "airportsListFilteringPriority": {
      "description": "Airports list filtering options when searching",
      "type": "string",
      "example": null
    },
    "datesFormatEdition": {
      "description": "Dates format for edition configured on airTRFX CMS",
      "type": "string",
      "example": null
    },
    "datesFormatDisplay": {
      "description": "Date format for display configured on airTRFX CMS",
      "type": "string",
      "example": null
    },
    "visibleMonthsMaxNumber": {
      "description": "Maximum number of visible months when selecting the departure/return dates",
      "type": "number",
      "example": 8
    },
    "showFlexibleDays": {
      "description": "Whether to show flexible days around departure/return date at UI level",
      "type": "boolean",
      "example": true
    },
    "daysUntilReturnDate": {
      "description": "Number of days until Retutn date for its autopopulation",
      "type": "number",
      "example": 5
    },
    "isBlackoutDates": {
      "description": "Whether blackout dates are enabled",
      "type": "boolean",
      "example": true
    },
    "showFareClasses": {
      "description": "Whether to show each fare class at the UI level",
      "type": "array",
      "items": {
        "type": "boolean"
      },
      "example": [
        false,
        true
      ]
    },
    "fareClasses": {
      "description": "Fare classes (Should be provided by the airline)",
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": [
        "Economy",
        "Business",
        "FirstClass"
      ]
    },
    "fareClassDefault": {
      "description": "Fare class default value",
      "type": "string",
      "example": "Economy"
    },
    "showPassengerCount": {
      "description": "Whether to show passenger count",
      "type": "boolean",
      "example": true
    },
    "passengersType": {
      "description": "Passengers type (Should be provided by the airline)",
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": [
        "Adults",
        "Children",
        "Infants"
      ]
    },
    "passengersTypeDefault": {
      "description": "Passenger type default value",
      "type": "string",
      "example": "Adults"
    },
    "showDiscountCode": {
      "description": "Whether to show the promotional code",
      "type": "boolean",
      "example": true
    },
    "isCallToActionDisabledOnError": {
      "description": "Whether the Flight search initiation call to action button is disabled on error",
      "type": "boolean",
      "example": true
    },
    "PassengerCountMaxNumber": {
      "description": "Maximun number of passengers",
      "type": "number",
      "example": 4
    },
    "PassengerCountMinNumber": {
      "description": "Minimum number of passengers",
      "type": "number",
      "example": 1
    },
    "PassengerCountByTypeMaxNumber": {
      "description": "Maximum number of passenger by type",
      "type": "object",
      "properties": {
        "adultsCount": {
          "description": "adultsCount",
          "type": "number",
          "example": 9
        },
        "childrenCount": {
          "description": "childrenCount",
          "type": "number",
          "example": 5
        }
      }
    },
    "PassengerCountByTypeMinNumber": {
      "description": "Minimum number of passenger by type",
      "type": "object",
      "properties": {
        "adultsCount": {
          "description": "adultsCount",
          "type": "number",
          "example": 1
        },
        "childrenCount": {
          "description": "childrenCount",
          "type": "number",
          "example": 1
        }
      }
    },
    "departureAirportIataCodeDefault": {
      "description": "Departure airport IATA code for prepoluation",
      "type": "string",
      "example": "SFO"
    },
    "arrivalAirportIataCodeDefault": {
      "description": "Arrival airport IATA code for prepopulation",
      "type": "string",
      "example": "MIA"
    },
    "departureDateDefault": {
      "description": "Default departure date value",
      "type": "string",
      "example": "2017-12-11"
    },
    "returnDateDefault": {
      "description": "Default return date value",
      "type": "string",
      "example": "2017-12-18"
    },
    "flexibleDaysDefault": {
      "description": "Number of days around departure/return date default value",
      "type": "number",
      "example": 3
    },
    "labelKeys": {
      "description": "Label keys list",
      "type": "array",
      "items": {
        "type": "string",
        "example": [
          "EmCmpFrom"
        ]
      }
    },
    "accessibilityLabelKeys": {
      "description": "Accessibility label keys list",
      "type": "array",
      "items": {
        "type": "string",
        "example": [
          "AccEmCmpFrom"
        ]
      }
    }
  },
  "required": [],
  "links": [
    {
      "title": "frontComponent",
      "description": "frontComponent",
      "rel": "self",
      "href": "/frontComponent",
      "method": "GET",
      "targetSchema": {
        "rel": "self"
      }
    }
  ]
}